[build-system]
# Minimum requirements for the build system to execute.
requires = ["poetry-core>=1.0.0", "setuptools", "wheel", "translate-toolkit"]  # PEP 508 specifications.
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ['py39']

[tool.codespell]
skip = '*.po,*.pot,*.json,*.tmx,*.tbx,yarn.lock,known_hosts'

[tool.pylint.main]
disable = [
  "C",
  "W",
  "R",
  "I",
  "no-member",
  "not-a-mapping",
  "unsubscriptable-object",
  "unsupported-membership-test",
  "not-an-iterable",
  "unsupported-binary-operation",
  "c-extension-no-member",
  "not-callable",
  "invalid-str-returned",
  "raising-bad-type",
  "no-name-in-module",
  "import-error"
]
extension-pkg-whitelist = ["siphashc"]
ignore = [
  "migrations",
  "settings.py",
  "settings_test.py",
  ".git",
  "test-repos",
  "repos",
  "build",
  ".venv"
]

[tool.ruff]
format = "github"
# CONFIG - intentional configuration
# TODO - needs decision whether intention, add noqa tags or fix
# WONTFIX - not fixable in current codebase, might be better to go for noqa
ignore = [
  "COM",  # CONFIG: No trailing commas
  "PT",  # CONFIG: Not using pytest
  "D203",  # CONFIG: incompatible with D211
  "D212",  # CONFIG: incompatible with D213
  "FIX002",  # CONFIG: we use TODO
  "TD002",  # CONFIG: no detailed TODO documentation is required
  "TD003",  # CONFIG: no detailed TODO documentation is required
  "S603",  # CONFIG: `subprocess` call: check for execution of untrusted input
  "S607",  # CONFIG: executing system installed tools
  "EM",  # TODO: Exception strings
  "PTH",  # TODO: Not using pathlib
  "FBT",  # TODO: Boolean in function definition
  "BLE001",  # WONTFIX: Do not catch blind exception: `Exception`, third-party modules do not have defined exceptions
  "ARG001",  # TODO: Unused function argument (mostly for API compatibility)
  "ARG002",  # TODO: Unused method argument (mostly for API compatibility)
  "ANN",  # TODO: we are missing many annotations
  "D10",  # TODO: we are missing many docstrings
  "D401",  # TODO: many strings need rephrasing
  "TRY003",  # WONTFIX: Avoid specifying long messages outside the exception class
  "TRY200",  # TODO: Use `raise from` to specify exception cause
  "B904",  # TODO: Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
  "PERF203",  # WONTFIX: This rule is only enforced for Python versions prior to 3.1
  "PLR0911",  # WONTFIX: Too many return statements
  "PLR0912",  # WONTFIX: Too many branches
  "PLR0913",  # WONTFIX: Too many arguments to function call
  "PLR0915",  # WONTFIX: Too many statements
  "PLR2004",  # TODO: Magic value used in comparison, consider replacing 201 with a constant variable
  "RUF001",  # WONTFIX: String contains ambiguous unicode character, we are using Unicode
  "RUF012",  # TODO: Mutable class attributes should be annotated with `typing.ClassVar`
  "RUF100",  # TODO: unused noqa, compatibility with flake8, can be dropped once we stop using it
  "E501",  # WONTFIX: we accept long strings (rest is formatted by black)
  "PLW2901",  # TODO: overwriting variables inside loop
  "A001",  # TODO: overriding builtins (might need noqa tags)
  "A002",  # TODO: overriding builtins (might need noqa tags)
  "A003",  # TODO: overriding builtins (might need noqa tags)
  "SLF001"  # TODO: Private member accessed (might need noqa tags)
]
select = ["ALL"]
target-version = "py39"

[tool.ruff.isort]
split-on-trailing-comma = false

[tool.ruff.mccabe]
max-complexity = 16

[tool.ruff.per-file-ignores]
"docs/_ext/djangodocs.py" = ["INP001"]
"docs/conf.py" = ["INP001", "ERA001", "A001"]
"scripts/*" = ["T201", "T203"]
"weblate/*/management/commands/*.py" = ["A003"]  # Needed by Django API
"weblate/*/migrations/*.py" = ["C405", "E501", "N806", "DJ01"]
"weblate/*/tests.py" = ["S106", "S105"]
"weblate/*/tests/test_*.py" = ["S106", "S105"]
"weblate/addons/management/commands/list_addons.py" = ["E501"]
"weblate/addons/utils.py" = ["N806"]
"weblate/auth/migrations/0018_fixup_role.py" = ["T201", "N806"]
"weblate/examples/*.py" = ["INP001"]
"weblate/lang/data.py" = ["E501"]
"weblate/machinery/management/commands/list_machinery.py" = ["E501"]
"weblate/settings_*.py" = ["F405"]
"weblate/settings_docker.py" = ["ERA001"]
"weblate/settings_example.py" = ["ERA001"]
"weblate/trans/migrations/0103_update_source_unit.py" = ["T201", "N806"]
"weblate/trans/migrations/0116_migrate_glossaries.py" = ["T201", "N806", "E501"]
"weblate/trans/migrations/0127_fix_source_glossary.py" = ["T201", "N806"]
"weblate/trans/migrations/0133_glossary_missing_files.py" = ["T201", "N806"]
"weblate/trans/tests/test_files.py" = ["E501"]
"weblate/utils/generate_secret_key.py" = ["T201"]
"weblate/utils/licensedata.py" = ["E501"]
"weblate/utils/locale.py" = ["B012"]

[tool.poetry]
name = "weblate"
version = "5.5.5"
description = ""
authors = ["Your Name <you@example.com>"]
license = "GPLv3+"

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
aeidon = ">= 1.14.1,<1.16"
ahocorasick-rs = ">= 0.20.0,<0.23.0"
borgbackup = ">= 1.2.5,<1.3"
celery = { version = ">= 5.4.0,<5.5", extras = ["redis"] }
certifi = ">= 2023.7.22"
charset-normalizer = ">= 2.0.12,<4.0"
crispy-bootstrap3 = "== 2024.1"
cryptography = ">= 42.0.2"
cssselect = ">= 1.2,<1.3"
Cython = ">= 3.0.0,<3.1"
diff-match-patch = "== 20230430"
django-appconf = ">= 1.0.3,<1.1"
django-celery-beat = ">= 2.6.0,<2.7"
django-compressor = ">= 4.4,<5"
django-cors-headers = ">= 4.3.0,<4.4"
django-crispy-forms = ">= 2.1,<2.3"
django-filter = ">= 23.4,<24.3"
django-redis = ">= 5.4.0,<6.0"
Django = { version = ">= 5.0,<5.1", extras = ["argon2"] }
djangorestframework = ">= 3.15.0,<3.16"
filelock = "< 4,>=3.12.2"
"fluent.syntax" = ">= 0.18.1,<0.20"
GitPython = ">= 3.1.0,<3.2"
hiredis = ">= 2.2.1,<2.4"
html2text = ">= 2024.2.25,<2024.2.27"
iniparse = "== 0.5"
jsonschema = ">= 4.5,<5"
lxml = ">= 5.2.0,<5.3"
misaka = ">= 2.1.0,<2.2"
mistletoe = ">= 1.3.0,<1.4"
nh3 = ">= 0.2.14,<0.3"
openpyxl = ">= 3.1.0,<3.2"
packaging = ">= 22,<24.2"
phply = ">= 1.2.6,<1.3"
Pillow = ">= 10.3.0,<10.4"
pycairo = ">= 1.20.0"
Pygments = ">= 2.15.0,<3.0"
PyGObject = ">= 3.40.1"
pyicumessageformat = ">= 1.0.0,<1.1"
pyparsing = ">= 3.1.1,<3.2"
python-dateutil = ">= 2.8.2"
python-redis-lock = { version = ">= 4,<4.1", extras = ["django"] }
rapidfuzz = ">= 2.6.0,<3.10"
redis = ">= 5.0.2,<5.1.0"
requests = ">= 2.32.2,<2.33"
"ruamel.yaml" = ">= 0.17.2,<0.19.0"
sentry-sdk = ">= 2.2,<2.6"
siphashc = ">= 2.1,<3.0"
social-auth-app-django = ">= 5.4.0,<6.0.0"
social-auth-core = ">= 4.5.0,<5.0.0"
tesserocr = ">= 2.6.1,<2.8.0"
translate-toolkit = ">= 3.13.0,<3.14"
translation-finder = ">= 2.16,<3.0"
user-agents = ">= 2.0,<2.3"
weblate-language-data = ">= 2024.3"
weblate-schemas = "== 2024.1"

# TODO remove
hatch-fancy-pypi-readme = "*"

[tool.poetry.dev-dependencies]

